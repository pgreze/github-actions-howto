on:
  pull_request:
  push:
    branches:
      - main
      - android-versions

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build args
        id: build-args
        shell: bash
        run: |
          set -o xtrace
          ARGS=""
          if true; then
            ARGS+=" arg1"
            ARGS+=" arg2"
          fi
          if false; then
            ARGS+=" arg3"
          fi
          echo "ARGS=$ARGS" >> $GITHUB_OUTPUT

      - name: Consume args
        shell: bash
        run: |
          command() { echo "arg1=$1 arg2=$2 arg3=$3"; }

          # Notice without "..." it will try to run arg1 as the program
          string="${{ steps.build-args.outputs.ARGS }}"
          echo "As string: $string"
          command $string # Output: arg1=arg1 arg2=arg2 arg3=
          # This is surprising...

          echo "Convert to array"
          read -a array <<< "${{ steps.build-args.outputs.ARGS }}"
          command ${array[@]} # Output: arg1=arg1 arg2=arg2 arg3=

      - name: Android SDK versions
        shell: bash
        run: ./android-sdk-list.sh

  reuse_workflow:
    uses: ./.github/workflows/reusable_workflow.yml
    with:
      key: value
      enabled_option: true
      disabled_option: false
      opt_key_provided: hello
    secrets: inherit

  prep_multi_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
    - id: set_matrix
      run: |
        node_total=4
        node_index="[ $(seq -s ", " 0 $(( node_total-1 ))) ]"
        echo "matrix={\"node_index\":$(echo $node_index), \"node_total\":[$(echo $node_total)]}" >> $GITHUB_OUTPUT

  multi_matrix_mk:
    needs: prep_multi_matrix
    uses: ./.github/workflows/multi_matrix.yml
    with:
      key: Value
      suffix: ""
      node_matrix: ${{ needs.prep_multi_matrix.outputs.matrix }}
    secrets: inherit

  multi_matrix_mp:
    needs: prep_multi_matrix
    uses: ./.github/workflows/multi_matrix.yml
    with:
      key: Value
      suffix: "Suffix"
      node_matrix: ${{ needs.prep_multi_matrix.outputs.matrix }}
    secrets: inherit
