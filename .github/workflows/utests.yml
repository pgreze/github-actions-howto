name: Dynamic matrix workflow

on:
  workflow_call:
    inputs:
      flavor:
        type: string
        required: true
      node_total:
        type: string
        required: false
        default: 2

jobs:
  pre_utests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen_matrix.outputs.matrix }}
    steps:
      - name: Generate a dynamic matrix
        id: gen_matrix
        shell: bash
        run: |
          node_total=${{ inputs.node_total }}
          node_index="[ $(seq -s ", " 0 $(( $node_total-1 ))) ]"
          suffix='[ "", "Suffix" ]'
          echo "matrix={\"node_total\":[$node_total], \"node_index\":$node_index, \"suffix\": $suffix}" | tee $GITHUB_OUTPUT

  utests:
    needs: pre_utests
    runs-on: ubuntu-latest
    # https://adamtheautomator.com/github-actions-matrix/
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.pre_utests.outputs.matrix)}}
    steps:
      - name: Main action
        id: main_action
        shell: bash
        env:
          NODE_INDEX: ${{ matrix.node_index }}
          NODE_TOTAL: ${{ matrix.node_total }}
        run: >
          echo
          test${{ inputs.flavor }}${{ matrix.suffix }}
          -Pindex=$NODE_INDEX
          -Pcount=$NODE_TOTAL
          | tee output.txt

          if [ ${{ inputs.flavor }} == 'debug' ]; then
            exit $NODE_INDEX
          fi

      - name: Prepare artifact
        id: prepare_artifact
        shell: bash
        if: always()
        run: |
          artifact="${{ inputs.flavor }}${{ matrix.suffix }}"
          artifact+="-${{ matrix.node_index }}"
          artifact+="-${{ matrix.node_total }}"

          mkdir "$artifact" && mv output.txt "$artifact"
          zip -r "$artifact.zip" "$artifact"

          echo "artifact_name=$artifact" >> $GITHUB_OUTPUT
          echo "artifact_path=$artifact.zip" >> $GITHUB_OUTPUT
          echo "${{ steps.main_action.outcome }} = failure?"

      - name: Publish artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepare_artifact.outputs.artifact_name }}
          path: ${{ steps.prepare_artifact.outputs.artifact_path }}

  # https://github.com/orgs/community/discussions/25338
  post_utests:
    needs: utests
    runs-on: ubuntu-latest
    steps:
      - run: echo '${{ toJSON(needs) }}'

      - uses: actions/download-artifact@v3
        id: download_artifacts
        with: # TODO: find an equivalent not downloading ALL ARTIFACTS
          path: artifacts

      - name: Resolve artifacts
        id: resolve_artifacts
        shell: bash
        run: |
          directory="${{ steps.download_artifacts.outputs.download-path }}"

          echo "::group::Only keep artifacts for the given key"
          for artifact in $(ls "$directory"); do
            if [[ $artifact =~ "^${{ inputs.flavor }}.*" ]]; then
              echo "Remove $artifact" && rm -rf "$directory/$artifact"
            fi
          done
          echo "::endgroup::"

          echo "::group::Extract and remove all zip files" # Exp: artifacts/Value-1-2/Value-1-2.zip
          find "$directory" -type f -name "*.zip" | while read artifact_zip; do
            artifact_dir="$(dirname $artifact_zip)"
            echo "Extract $artifact_zip in $artifact_dir"
            unzip "$artifact_zip" -d "$artifact_dir"
            rm "$artifact_zip"
          done
          echo "::endgroup::"

          echo "::group::Consume artifacts"
          find "$directory" -type f | while read artifact; do
            echo "Content of $artifact: $(cat $artifact)"
          done
          echo "::endgroup::"

          echo "::group::Resolve utests outcomes"
          curl -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/jobs \
            > jobs.json
          cat jobs.json
          outcomes=$(cat jobs.json | jq '[.jobs[] | select(.name|test("^utests_${{ inputs.flavor }} / utests")) | .steps[] | .conclusion] | unique | .[]')
          echo "outcomes=$outcomes"
          if echo $outcomes | grep '"failure"' > /dev/null; then
            echo "failed=true" | tee $GITHUB_OUTPUT
          else
            echo "failed=false" | tee $GITHUB_OUTPUT
          fi
          echo "::endgroup::"

      - name: Delete all consumed artifacts
        uses: jimschubert/delete-artifacts-action@v1
        with:
          pattern: "^${{ inputs.flavor }}.*"

      - name: Fail if failed detected
        # Neither == true or == 'true' worked...
        # https://github.com/actions/runner/issues/1483
        if: ${{ steps.resolve_artifacts.outputs.failed == 'true' }}
        shell: bash
        run: exit 1
